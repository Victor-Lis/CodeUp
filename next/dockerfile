# Etapa 1: Builder
FROM node:22-alpine AS builder
RUN npm install -g pnpm
WORKDIR /app

ARG DATABASE_URL
ARG NEXTAUTH_SECRET
ARG NEXT_PUBLIC_FIREBASE_APIKEY
ARG NEXT_PUBLIC_FIREBASE_AUTHDOMAIN
ARG NEXT_PUBLIC_FIREBASE_PROJECTID
ARG NEXT_PUBLIC_FIREBASE_STORAGEBUCKET
ARG NEXT_PUBLIC_FIREBASE_MESSAGINGSENDERID
ARG NEXT_PUBLIC_FIREBASE_APPID
ARG NEXT_PUBLIC_FIREBASE_MEASUREMENTID
ARG NEXT_PUBLIC_VALIDATOR_API_URL

# Copia apenas os arquivos de dependência primeiro para aproveitar o cache
COPY package.json pnpm-lock.yaml ./
RUN pnpm install --frozen-lockfile

# Copia o resto do código-fonte
COPY . ./

RUN echo "DATABASE_URL=$DATABASE_URL" >> .env
RUN echo "NEXTAUTH_SECRET=$NEXTAUTH_SECRET" >> .env
RUN echo "NEXT_PUBLIC_FIREBASE_APIKEY=$NEXT_PUBLIC_FIREBASE_APIKEY" >> .env
RUN echo "NEXT_PUBLIC_FIREBASE_AUTHDOMAIN=$NEXT_PUBLIC_FIREBASE_AUTHDOMAIN" >> .env
RUN echo "NEXT_PUBLIC_FIREBASE_PROJECTID=$NEXT_PUBLIC_FIREBASE_PROJECTID" >> .env
RUN echo "NEXT_PUBLIC_FIREBASE_STORAGEBUCKET=$NEXT_PUBLIC_FIREBASE_STORAGEBUCKET" >> .env
RUN echo "NEXT_PUBLIC_FIREBASE_MESSAGINGSENDERID=$NEXT_PUBLIC_FIREBASE_MESSAGINGSENDERID" >> .env
RUN echo "NEXT_PUBLIC_FIREBASE_APPID=$NEXT_PUBLIC_FIREBASE_APPID" >> .env
RUN echo "NEXT_PUBLIC_FIREBASE_MEASUREMENTID=$NEXT_PUBLIC_FIREBASE_MEASUREMENTID" >> .env
RUN echo "NEXT_PUBLIC_VALIDATOR_API_URL=$NEXT_PUBLIC_VALIDATOR_API_URL" >> .env

# Constrói a aplicação
RUN pnpm build
RUN rm -rf .env
RUN pnpm prune --production

# Etapa 2: Runner (Execução)
FROM node:22-alpine AS runner
RUN npm install -g pnpm
WORKDIR /app

# Copia apenas os artefatos necessários da etapa de build
COPY --from=builder /app/package.json ./package.json
COPY --from=builder /app/pnpm-lock.yaml ./pnpm-lock.yaml
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/next.config.ts ./next.config.ts
COPY --from=builder /app/public ./public

# A porta será definida pela variável de ambiente no docker-compose
EXPOSE 3333
CMD ["pnpm", "start"]